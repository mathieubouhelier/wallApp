{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My Project WallApp",
    "description": "WallApp is an application API, including user management and wallpost CRUD",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "API for users"
    },
    {
      "name": "Posts",
      "description": "API for Posts"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],

  "paths": {
    "/user/register": {
      "post": {
        "tags": ["Users"],
        "description": "Used to register a new user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "To Register",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserToRegister"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "User registered with success!",
            "schema": {
              "$ref": "#/definitions/UserToRegisterResponse"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": ["Users"],
        "description": "Used to login",
        "parameters": [
            {
            "name": "user",
            "in": "body",
            "description": "To login",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Login with success!",
            "schema": {
              "$ref": "#/definitions/UserLoginResponse"
            }
          },
          "400": {
            "description": "Invalid login and/or password"
          }
        }
      }
    },
    "/post": {
      "get": {
        "tags": ["Posts"],
        "description": "To get all Posts",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Login with success!",
            "schema": {
              "$ref": "#/definitions/GetAllPostsResponse"
            }
          },
          "500": {
            "description": "Error to get all posts"
          }
        }
      },
      "post": {
        "tags": ["Posts"],
        "description": "Post a new post",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Standard Authorization header using a Token",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "post",
            "in": "body",
            "description": "To post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/post"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/PostResponse"
            }
          },
          "400": {},
          "401": {
            "description": "missing auth token/jwt malformed"
          },
          "500": {
            "description": "Error to get all posts"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/post/{postId}": {
      "delete": {
        "tags": ["Posts"],
        "description": "Delete a post",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Standard Authorization header using a Token",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "Post Id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "204": { "description ": "Post successfully deleted" },
          "400": {},
          "401": {
            "description": "user not granted/missing auth token/jwt malformed"
          },
          "404": {
            "description": "Post not found"
          },
          "500": {
            "description": "Error to delete the post"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["Posts"],
        "description": "Post a new post",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Standard Authorization header using a Token",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "Post Id to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "post",
            "in": "body",
            "description": "To post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/post"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/postPutResponse"
            },
            "400": {},
            "401": {
              "description": "user not granted/missing auth token/jwt malformed"
            },
            "500": {
              "description": "Error to update a post"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },

  "definitions": {
    "UserToRegister": {
      "required": ["user_name", "_id", "email", "user_password"],
      "properties": {
        "user_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "user_password": {
          "type": "string"
        }
      }
    },
    "UserToRegisterResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "User registered with success!"
        },
        "user": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "example": "John Doe"
            },
            "email": {
              "type": "string",
              "example": "jodo25@gmail.com"
            }
          }
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywidXNlcl9uYW1lI"
        }
      }
    },
    "UserLogin": {
      "required": ["_id", "email", "user_password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "user_password": {
          "type": "string"
        }
      }
    },
    "UserLoginResponse": {
      "required": ["token"],
      "properties": {
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlcl9uYW1lIjoiSm9obiBEb2UiLCJlbWFpbCI6ImpvaG5kb2VAZ21haWwuY29tIiwiY3JlYXRlZEF0IjoiMjAyMS0wOC0wOFQwMzowNToxMy4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMS0wOC0wOFQwMzowNToxMy4wMDBaIiwiaWF0IjoxNjI4NDAxNzcwLCJleHAiOjE2Mjg0ODgxNzB9.lINQE7NVKIsnxTP0pwQ_n4OU8tpEq28IYKMBkyanMjI"
        }
      }
    },

    "GetAllPostsResponse": {
      "properties": {
        "id": {
          "type": "integer",
          "example": "1"
        },
        "title": {
          "type": "string",
          "example": "First Post"
        },
        "content": {
          "type": "string",
          "example": "starting posting on the Wall"
        },
        "userId": {
          "type": "string",
          "example": "2"
        },
        "published": {
          "type": "string",
          "example": "2021-08-01T19:58:00.000Z"
        },
        "updated": {
          "type": "string",
          "example": "2021-08-01T19:58:51.000Z"
        },
        "user": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "example": "John Doe"
            },
            "email": {
              "type": "string",
              "example": "jodo25@gmail.com"
            },
            "createdAt": {
              "type": "string",
              "example": "2021-08-01T19:58:00.000Z"
            },
            "updatedAt": {
              "type": "string",
              "example": "2021-08-01T19:58:51.000Z"
            }
          }
        }
      }
    },
    "PostResponse": {
      "properties": {
        "title": {
          "type": "string",
          "example": "My first Post"
        },
        "content": {
          "type": "string",
          "example": "The whole text for the blog post goes here in this key"
        },
        "userId": {
          "type": "integer",
          "example": "2"
        }
      }
    },
    "post": {
      "properties": {
        "title": {
          "type": "string",
          "example": "My first Post"
        },
        "content": {
          "type": "string",
          "example": "The whole text for the blog post goes here in this key"
        }
      }
    },
    "postPutResponse": {
      "properties": {
        "title": {
          "type": "string",
          "example": "My first Post"
        },
        "content": {
          "type": "string",
          "example": "The whole text for the blog post goes here in this key"
        },
        "userId": {
          "type": "integer",
          "example": "2"
        }
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
